plugins {
    id 'com.android.application'
    id 'com.getkeepsafe.dexcount'
}

repositories {
    google()
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

static def gitHash() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

android {
    namespace 'com.ms_square.debugoverlay.sample'
    compileSdk rootProject.ext.compileSdkVersion

    // to allow buildConfigField usage within defaultConfig
    buildFeatures.buildConfig = true

    defaultConfig {
        applicationId "com.ms_square.debugoverlay.sample"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion

        versionCode 1
        versionName "1.0.0"

        buildConfigField "String", "GIT_HASH", "\"${gitHash()}\""

        testInstrumentationRunner "com.ms_square.debugoverlay.DebugOverlayTestRunner"
    }

    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            // double check if keystore.properties exists to avoid exception
            if (file("../keystore.properties").exists()) {
                keyProps.load(new FileInputStream(file('../keystore.properties')))
            }
            storeFile keyProps["storeFile"] != null ? file(keyProps["storeFile"]) : null
            storePassword keyProps["storePassword"]
            keyAlias keyProps["keyAlias"]
            keyPassword keyProps["keyPassword"]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // check if keystore.properties exists in the root
            if (file("../keystore.properties").exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    debugImplementation project(':debugoverlay')
    releaseImplementation project(':debugoverlay-no-op')
    testImplementation project(':debugoverlay-no-op')

    implementation(project(':debugoverlay-ext-timber')) {
        exclude module: 'debugoverlay'
    }

    implementation(project(':debugoverlay-ext-netstats')) {
        exclude module: 'debugoverlay'
    }

    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:design:${supportLibraryVersion}"

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'com.jakewharton.timber:timber:4.5.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    // Set this dependency to build and run Espresso tests
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // ScreenShot taker for instrumentation tests
    androidTestImplementation(name:'cloudtestingscreenshotter_lib', ext:'aar')

    testImplementation deps.junit
}
